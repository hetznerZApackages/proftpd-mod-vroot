#
# Proftpd sample configuration for vroot.
#

<IfModule mod_vroot.c>

# VRootAlias
# Syntax: VRootAlias src-path dst-path
# Default: None
# The VRootAlias directive is used to create an "alias" of a directory outside of the chroot area into 
# the chroot. The dst-path parameter is a relative path, relative to the chroot area (i.e. the directory
# in which the session starts). The src-path parameter, on the other hand, is an absolute path, and may be to a file or directory.
# For example, you might map a shared upload directory into a user's home directory using:
#  <IfModule mod_vroot.c>
#    VRootEngine on
#
#    DefaultRoot ~
#    VRootAlias /var/ftp/upload ~/upload
#  </IfModule>
# This will automatically create an "upload" directory to appear in the chroot area (in this case, the user's home directory).
# Note that this directive will not work if the VRootServerRoot is used. 

# VRootEngine
# Syntax: VRootEngine on|off
# Default: None
# The VRootEngine directive enables the virtual chroot engine implemented by mod_vroot. 
# If enabled, the virtual chroot will be used in place of the operating system's chroot(2).
# This directive affects any DefaultRoot directives and any <Anonymous> contexts within the
# server context in which the VRootEngine directive appears.
VRootEngine on
DefaultRoot ~
VRootAlias /var/ftp/upload ~/upload

# VRootLog
# Syntax: VRootLog file
# Default: None
# The VRootLog directive is used to specify a log file for mod_vroot's reporting on a
# per-server basis. The file parameter given must be the full path to the file to use for logging.

# VRootOptions
# Syntax: VRootOptions opt1 ...
# Default: None
# The VRootOptions directive is used to configure various optional behavior of mod_vroot.
# Example:
#   VRootOptions allowSymlinks
# The currently implemented options are:
#     * allowSymlinks
# Normally, any symlinks that point outside of the vroot area simply do not work.
# When the allowSymlinks option is enabled, these symlinks will be allowed. 
# Note that by enabling symlinks, the efficacy of the vroot "jail" is reduced. 

# VRootServerRoot
# Syntax: VRootServerRoot path
# Default: None
# The VRootServerRoot directive is used to configure a directory to which the mod_vroot module will perform a real chroot.
# The idea is that each <VirtualHost> can have its own directory to which a real chroot(2) system call is made;
# the user-specific home directories will be virtual roots underneath this directory. Thus some measure of security,
# via the chroot(2) system call, is provided by the kernel, while still allowing symlinked shared folders among users of this <VirtualHost>.
# For example:
#  <VirtualHost a.b.c.d>
#    VRootEngine on
#    VRootServerRoot /etc/ftpd/a.b.c.d/
#    VRootOptions allowSymlinks
#    DefaultRoot ~
#    ...
#
#  </VirtualHost>

</IfModule>

